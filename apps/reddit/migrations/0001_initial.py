# Generated by Django 2.0.3 on 2018-06-28 23:02

import apps.core.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('link', apps.core.fields.URLField(unique=True)),
                ('reddit_id', models.CharField(max_length=200, unique=True)),
                ('nsfw', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RedditConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forbidden_keywords', models.TextField(blank=True)),
                ('publish_cron', models.CharField(default='*/30 * * * * *', max_length=200)),
                ('clean_cron', models.CharField(default='0 */12 * * * *', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subreddit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('score_limit', models.IntegerField(validators=[django.core.validators.MinLengthValidator(0)])),
                ('pass_nsfw', models.BooleanField(default=False)),
                ('show_title', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('on_moderation', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='subreddit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reddit.Subreddit'),
        ),
    ]
